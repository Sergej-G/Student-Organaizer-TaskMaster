@startuml
class DAO.SubtaskDAO.TaskDAOPosSubtask {
- Connection conn
+ List<Subtask> getAllSubtasks(Integer)
+ void addSubtask(Subtask)
+ void updateSubtask(Subtask)
+ void deleteSubtask(int)
+ void drop()
}
interface DAO.SubtaskDAO.SubtaskDAO {
~ List<Subtask> getAllSubtasks(Integer)
~ void addSubtask(Subtask)
~ void updateSubtask(Subtask)
~ void deleteSubtask(int)
~ void drop()
}
class model.DescriptionSubtask {
- SimpleIntegerProperty id
- SimpleIntegerProperty subtask_id
- SimpleStringProperty nameDescriptionSubtask
- SimpleStringProperty opisanieDescriptionSubtask
+ int getId()
+ SimpleIntegerProperty idProperty()
+ void setId(int)
+ int getSubtask_id()
+ SimpleIntegerProperty subtask_idProperty()
+ void setSubtask_id(int)
+ String getNameDescriptionSubtask()
+ SimpleStringProperty nameDescriptionSubtaskProperty()
+ void setNameDescriptionSubtask(String)
+ String getOpisanieDescriptionSubtask()
+ SimpleStringProperty opisanieDescriptionSubtaskProperty()
+ void setOpisanieDescriptionSubtask(String)
}
class com.example.taskmaster.AddTask {
+ DatePicker addWindowDatapicker
+ TextField addWindowNameField
+ TextArea addWindowDescriptionField
+ Button addWindowButton
+ TableView table
~ TaskDAO taskDAO
~ String dateNow
- HelloController helloController
+ void setParent(HelloController)
+ void addTaskWindow(ActionEvent)
+ void close(ActionEvent)
- void showAlertWithHeaderText()
- void pickDateAlert()
+ void initialize(URL,ResourceBundle)
}
class model.Task {
- SimpleIntegerProperty id
- SimpleStringProperty name
- SimpleStringProperty description
- SimpleStringProperty date
+ int getId()
+ SimpleIntegerProperty idProperty()
+ String getName()
+ SimpleStringProperty nameProperty()
+ String getDescription()
+ SimpleStringProperty descriptionProperty()
+ String getDate()
+ SimpleStringProperty dateProperty()
+ void setId(int)
+ void setName(String)
+ void setDescription(String)
+ void setDate(String)
}
class com.example.taskmaster.HelloApplication {
+ void start(Stage)
+ {static} void main(String[])
}
class com.example.taskmaster.DetailsTask {
+ TextArea updateSubtaskDescr
+ TextField updateSubtaskName
~ Image image
+ TextField detailsName
+ TextArea detailsDescription
+ Button addDetails
+ Button closeDetails
+ TableView tableDetails
+ TableView tableDescription
- AddDescriptionSubtask addDescriptionSubtask
- ObservableList<Subtask> fxlistSubtask
- ObservableList<AddDescriptionSubtask> fxlistAddDescriptionSubtask
~ SubtaskDAO taskDAODetails
~ DescriptionSubtaskDAO descriptionSubtaskDAO
~ Integer customId
- HelloController helloController
+ Integer getCustomId()
+ void setCustomId(Integer)
+ void windowAddDescriptionSubtask(ActionEvent)
+ void addDetails(ActionEvent)
# void outputDetails()
+ void closeDetails(ActionEvent)
- void showAlertWithHeaderText()
- void alertPicItemForUpdate()
- void alertPicItem()
+ void setParent(HelloController)
- void createTableSubtask()
- void createTableDescriptionSubtask2()
# void updateSubtask()
# void deleteSubtask()
+ void initialize(URL,ResourceBundle)
}
class com.example.taskmaster.HelloController {
+ TextField updateTaskField
+ DatePicker updateTaskData
+ TextArea updateTaskArea
- AddTask addTaskWin
- DetailsTask detailsTask
+ Label oglav
+ Button drop
+ DatePicker dateTask
+ Button addTask
~ Image image
~ TaskDAO taskDAO
~ SubtaskDAO subtaskDAO
~ Task task
+ TableView table
- ObservableList<Task> fxlist
+ void windowAddTask(ActionEvent)
+ void windowDetailsTask(ActionEvent)
- void createtable()
# void output()
# void sortByDate()
# void drop()
# void updateTask()
# void deleteTask()
- void showAlertWithHeaderTextforUpdate()
- void pickDateAlertforUpdate()
- void alertPicItem()
+ void initialize(URL,ResourceBundle)
}
class model.Subtask {
- SimpleIntegerProperty id
- SimpleIntegerProperty task_id
- SimpleStringProperty nameSubtask
- SimpleStringProperty descriptionSubtask
+ int getId()
+ SimpleIntegerProperty idProperty()
+ void setId(int)
+ int getTask_id()
+ SimpleIntegerProperty task_idProperty()
+ void setTask_id(int)
+ String getNameSubtask()
+ SimpleStringProperty nameSubtaskProperty()
+ void setNameSubtask(String)
+ String getDescriptionSubtask()
+ SimpleStringProperty descriptionSubtaskProperty()
+ void setDescriptionSubtask(String)
}
interface DAO.TaskDAO.TaskDAO {
~ List<Task> getAllTasks()
~ List<Task> sortTask(String)
~ void addTask(Task)
~ void updateTask(Task)
~ void deleteTask(int)
~ void drop()
}
class com.example.taskmaster.AddDescriptionSubtask {
+ TableView tableDescription
+ TextArea areaDescription
+ TextField nameDescription
+ TextField updateDescrSubtaskName
+ TextArea updateDescrSubraskDesc
- ObservableList<AddDescriptionSubtask> fxlistAddDescriptionSubtask
~ DescriptionSubtaskDAO descriptionSubtaskDAO
~ Integer customIdSubtask
- DetailsTask detailsTask
+ Integer getCustomIdSubtask()
+ void setCustomIdSubtask(Integer)
+ void addDescriptionSubtask1(ActionEvent)
# void outputDescriptionSubtask()
+ void closeDescriptionSubtask(ActionEvent)
- void showAlertWithHeaderText()
- void alertPicItemForUpdate()
+ void setParent(DetailsTask)
- void createTableDescriptionSubtask()
# void updateDescrSubtask()
# void deleteDescriptionSubtask()
+ void initialize(URL,ResourceBundle)
}
interface DAO.DescriptionSubtaskDAO.DescriptionSubtaskDAO {
~ List<DescriptionSubtask> getAllDescriptionSubtask(Integer)
~ void addDescriptionSubtask(DescriptionSubtask)
~ void updateDescriptionSubtask(DescriptionSubtask)
~ void deleteDescriptionSubtask(int)
}
class DAO.DescriptionSubtaskDAO.DescriptionSubtaskDAOPos {
- Connection conn
+ List<DescriptionSubtask> getAllDescriptionSubtask(Integer)
+ void addDescriptionSubtask(DescriptionSubtask)
+ void updateDescriptionSubtask(DescriptionSubtask)
+ void deleteDescriptionSubtask(int)
}
class DAO.TaskDAO.TaskDAOPos {
- Connection conn
+ List<Task> getAllTasks()
+ List<Task> sortTask(String)
+ void addTask(Task)
+ void updateTask(Task)
+ void deleteTask(int)
+ void drop()
}


DAO.SubtaskDAO.SubtaskDAO <|.. DAO.SubtaskDAO.TaskDAOPosSubtask
javafx.fxml.Initializable <|.. com.example.taskmaster.AddTask
javafx.application.Application <|-- com.example.taskmaster.HelloApplication
javafx.fxml.Initializable <|.. com.example.taskmaster.DetailsTask
javafx.fxml.Initializable <|.. com.example.taskmaster.HelloController
javafx.fxml.Initializable <|.. com.example.taskmaster.AddDescriptionSubtask
DAO.DescriptionSubtaskDAO.DescriptionSubtaskDAO <|.. DAO.DescriptionSubtaskDAO.DescriptionSubtaskDAOPos
DAO.TaskDAO.TaskDAO <|.. DAO.TaskDAO.TaskDAOPos
@enduml